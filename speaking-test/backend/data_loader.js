const { MongoClient } = require("mongodb");
const fs = require("fs");
require("dotenv").config();

const uri = process.env.MONGO_URI; // —Å—Ç—Ä–æ–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏–∑ .env
const client = new MongoClient(uri);

async function loadData() {
  try {
    await client.connect();
    const db = client.db("cefr_speaking"); // –±–∞–∑–∞
    const collection = db.collection("tests"); // –∫–æ–ª–ª–µ–∫—Ü–∏—è

    // —á–∏—Ç–∞–µ–º –≤–æ–ø—Ä–æ—Å—ã –∏–∑ JSON
    const data = JSON.parse(fs.readFileSync("questions.json", "utf-8"));

    // –æ—á–∏—â–∞–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏—é –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π (—á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –¥—É–±–ª–µ–π)
    await collection.deleteMany({});
    console.log("üóë –ö–æ–ª–ª–µ–∫—Ü–∏—è –æ—á–∏—â–µ–Ω–∞");

    // –∑–∞–≥—Ä—É–∂–∞–µ–º –Ω–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã
    if (Array.isArray(data)) {
      await collection.insertMany(data);
    } else {
      await collection.insertOne(data);
    }

    console.log("‚úÖ –í–æ–ø—Ä–æ—Å—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ MongoDB Atlas!");
  } catch (err) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:", err);
  } finally {
    await client.close();
  }
}

loadData();
